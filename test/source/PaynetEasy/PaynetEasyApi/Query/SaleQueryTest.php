<?php

namespace PaynetEasy\PaynetEasyApi\Query;

use PaynetEasy\PaynetEasyApi\Query\Prototype\PaymentQueryTest;
use PaynetEasy\PaynetEasyApi\PaymentData\Payment;
use PaynetEasy\PaynetEasyApi\PaymentData\BillingAddress;
use PaynetEasy\PaynetEasyApi\PaymentData\Customer;
use PaynetEasy\PaynetEasyApi\PaymentData\CreditCard;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-06-12 at 15:13:43.
 */
class SaleQueryTest extends PaymentQueryTest
{
    /**
     * @var SaleQuery
     */
    protected $object;

    protected $paymentStatus = Payment::STATUS_CAPTURE;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new SaleQuery('_');
    }

    public function testCreateRequestProvider()
    {
        return array(array
        (
            sha1
            (
                self::END_POINT .
                self::CLIENT_ID .
                '99' .                          // amount
                'vass.pupkin@example.com' .     // customer email
                self::SIGNING_KEY
            )
        ));
    }

    protected function getPayment()
    {
        return new Payment(array
        (
            'client_id'             => self::CLIENT_ID,
            'paynet_id'             => self::PAYNET_ID,
            'description'           => 'This is test payment',
            'amount'                =>  0.99,
            'currency'              => 'USD',
            'destination'           => 'destination',
            'customer'              => new Customer(array
            (
                'first_name'            => 'Vasya',
                'last_name'             => 'Pupkin',
                'email'                 => 'vass.pupkin@example.com',
                'ip_address'            => '127.0.0.1',
                'birthday'              => '112681',
                'ssn'                   => '8397'
            )),
            'billing_address'       => new BillingAddress(array
            (
                'country'               => 'US',
                'state'                 => 'TX',
                'city'                  => 'Houston',
                'first_line'            => '2704 Colonial Drive',
                'zip_code'              => '1235',
                'phone'                 => '660-485-6353',
                'cell_phone'            => '660-485-6353'
            )),
            'credit_card'           => new CreditCard(array
            (
                'card_printed_name'     => 'Vasya Pupkin',
                'credit_card_number'    => '4485 9408 2237 9130',
                'expire_month'          => '12',
                'expire_year'           => '14',
                'cvv2'                  => '084'
            ))
        ));
    }
}
