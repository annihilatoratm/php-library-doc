<?php

namespace PaynetEasy\PaynetEasyApi\Query;

use PaynetEasy\PaynetEasyApi\Query\Prototype\PaymentQueryTest;
use PaynetEasy\PaynetEasyApi\PaymentData\Payment;
use PaynetEasy\PaynetEasyApi\PaymentData\Customer;
use PaynetEasy\PaynetEasyApi\PaymentData\RecurrentCard;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-06-18 at 22:44:49.
 */
class TransferByRefQueryTest extends PaymentQueryTest
{
    /**
     * @var TransferByRefQuery
     */
    protected $object;

    protected $paymentStatus = Payment::STATUS_CAPTURE;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TransferByRefQuery('_');
    }

    public function testCreateRequestProvider()
    {
        return array(array
        (
            sha1
            (
                self::LOGIN .
                self::CLIENT_ID .
                self::RECURRENT_CARD_FROM_ID .
                self::RECURRENT_CARD_TO_ID .
                 9910 .
                'EUR' .
                self::SIGNING_KEY
            )
        ));
    }

    protected function getPayment()
    {
        return new Payment(array
        (
            'client_id'             => self::CLIENT_ID,
            'paynet_id'             => self::PAYNET_ID,
            'description'           => 'This is test payment',
            'amount'                =>  99.1,
            'currency'              => 'EUR',
            'customer'              => new Customer(array
            (
                'ip_address'            => '127.0.0.1'
            )),
            'recurrent_card_from'   => new RecurrentCard(array
            (
                'paynet_id'             => self::RECURRENT_CARD_FROM_ID,
                'cvv2'                  => 123
            )),
            'recurrent_card_to'     => new RecurrentCard(array
            (
                'paynet_id'             => self::RECURRENT_CARD_TO_ID,
            ))
        ));
    }
}
