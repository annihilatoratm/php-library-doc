<?php

namespace PaynetEasy\PaynetEasyApi\PaymentData;

use PaynetEasy\PaynetEasyApi\Exception\PaynetException;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-06-25 at 18:19:35.
 */
class PaymentTest extends \PHPUnit_Framework_TestCase
{
    public function testSerializeAndUnserialize()
    {
        $payment = new Payment(array
        (
            'customer'  => new Customer(array
            (
                'first_name'    => 'Vasya',
                'last_name'     => 'Pupkin',
                'email'         => 'vass.pupkin@example.com',
            ))
        ));

        $paymentTransaction = new PaymentTransaction(array
        (
            'status'    => PaymentTransaction::STATUS_APPROVED,
        ));

        $paymentTransaction->addError(new PaynetException('Test exception'));

        $payment
            ->setStatus(Payment::STATUS_CAPTURE)
            ->addPaymentTransaction($paymentTransaction)
            ->addPaymentTransaction(new PaymentTransaction)
        ;

        $unserializedPayment        = unserialize(serialize($payment));
        $paymentTransactions        = $unserializedPayment->getPaymentTransactions();
        $unserializedTransaction    = reset($paymentTransactions);

        $this->assertEquals(Payment::STATUS_CAPTURE, $unserializedPayment->getStatus());
        $this->assertEquals('vass.pupkin@example.com', $unserializedPayment->getCustomer()->getEmail());

        $this->assertCount(2, $paymentTransactions);
        $this->assertEquals(PaymentTransaction::STATUS_APPROVED, $unserializedTransaction->getStatus());

        $errors = $unserializedTransaction->getErrors();

        $this->assertTrue($unserializedTransaction->hasErrors());
        $this->assertEquals('Test exception', reset($errors)->getMessage());
    }
}
